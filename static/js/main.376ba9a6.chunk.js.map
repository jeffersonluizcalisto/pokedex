{"version":3,"sources":["styles/global.ts","pages/Item/style.ts","pages/style.ts","services/api.ts","pages/Item/item.tsx","pages/main.tsx","components/Header/style.ts","components/Header/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","backgrounds","steel","css","fire","grass","electric","water","ice","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","myanimation","keyframes","Item","styled","li","props","bg","spinner","Animation","div","Container","api","axios","create","baseURL","pokemon","types","type","name","src","sprites","other","front_default","alt","Main","useState","setPokemons","offset","setOffset","limit","spin","setSpin","pokemonsDetails","setPokemonsDetails","getPokemons","a","get","response","pokemonsList","data","arrayPokemons","results","poke","url","push","useEffect","map","onClick","className","size","header","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qvBAEeA,kBAAf,K,mzDCAO,IAAMC,EAAc,CACvBC,MAAOC,YAAF,KACLC,KAAMD,YAAF,KACJE,MAAOF,YAAF,KACLG,SAAUH,YAAF,KACRI,MAAOJ,YAAF,KACLK,IAAKL,YAAF,KACHM,OAAQN,YAAF,KACNO,KAAMP,YAAF,KACJQ,MAAOR,YAAF,KACLS,OAAQT,YAAF,KACNU,IAAKV,YAAF,KACHW,OAAQX,YAAF,KACNY,QAASZ,YAAF,KACPa,OAAQb,YAAF,KACNc,SAAUd,YAAF,KACRe,OAAQf,YAAF,MAOJgB,EAAcC,YAAH,KAYJC,EAAOC,IAAOC,GAAV,IAIAJ,GACX,SAACK,GAAD,OAAWvB,EAAYuB,EAAMC,O,sxECrCnC,IAAMC,EAAUN,YAAH,KAOAO,EAAYL,IAAOM,IAAV,IAGDF,GAKRG,EAAYP,IAAOM,IAAV,IA0ER3B,EAAW,Q,QCvFV6B,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,8BC8BEZ,EAzBqB,SAAC,GAAe,IAAD,EAAba,EAAa,EAAbA,QAE9BC,EAAQ,GAFmC,cAG5BD,EAAQC,OAHoB,IAG/C,2BAAkC,CAAC,IAAxBC,EAAuB,QAC1BD,EAGAA,GAAK,YAASC,EAAKA,KAAKC,MAFxBF,EAAK,UAAMC,EAAKA,KAAKC,KAAhB,MALkC,8BAW/C,OACI,eAAC,EAAD,CAAUZ,GAAIS,EAAQC,MAAM,GAAGC,KAAKC,MAAQ,SAA5C,UACQ,8BACI,qBAAKC,IAAKJ,EAAQK,QAAQC,MAAM,oBAAoBC,cAAeC,IAAKR,EAAQG,SAGpF,6BAAKH,EAAQG,OAEb,4BAAIF,Q,gBCiELQ,EAvDQ,WAAO,IAAD,EAEOC,mBAAuB,IAF9B,mBAERC,GAFQ,aAGGD,mBAAS,GAHZ,mBAGlBE,EAHkB,KAGVC,EAHU,OAICH,mBAAS,IAJV,mBAIlBI,EAJkB,aAKDJ,oBAAS,IALR,mBAKlBK,EALkB,KAKZC,EALY,OAMDN,oBAAS,GANR,gCAQqBA,mBAA0B,KAR/C,mBAQlBO,EARkB,KAQDC,EARC,cAUVC,IAVU,2EAUzB,wCAAAC,EAAA,6DAEIJ,GAAQ,GAFZ,SAI4BpB,EAAIyB,IAAJ,2BAA0CT,EAA1C,cAJ5B,OAIUU,EAJV,OAKUC,EAAeD,EAASE,KAE9Bb,EAAYY,GACZV,EAAUD,EAASE,GAEbW,EAAgB,GAV1B,cAWuBF,EAAaG,SAXpC,iEAWeC,EAXf,kBAYgC/B,EAAIyB,IAAmBM,EAAKC,IAAK,CAAC7B,QAAQ,KAZ1E,QAYcuB,EAZd,OAaQG,EAAcI,KAAKP,EAASE,MAbpC,gJAgBIN,EAAmB,GAAD,mBAAKD,GAAoBQ,IAC3CT,GAAQ,GAjBZ,iEAVyB,sBAkCzB,OAJAc,qBAAU,WACNX,MACD,IAGC,cAACxB,EAAD,UAEI,+BACKsB,EAAgBc,KAAI,SAAC/B,GAElB,OACI,cAAC,EAAD,CAAMA,QAASA,OAIvB,oBAAIgC,QAASb,EAAb,SAEMJ,EAAoC,cAACtB,EAAD,UAAW,cAAC,IAAD,CAAawC,UAAU,UAAUC,KAAM,QAA/E,cAAC,IAAD,CAAcA,KAAM,c,wlBClF1C,IAAMvC,EAAYP,IAAO+C,OAAV,KCUPC,EAVU,WACrB,OACA,eAAC,EAAD,WACI,8BAAK,qBAAKhC,IAAI,yGAAyGI,IAAI,cAC3H,4BCQO6B,GATO,kBAElB,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.376ba9a6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        outline: 0;\n    }\n\n    body{\n        background: linear-gradient(to right, rgb(197, 230, 236), rgb(239, 187, 230));\n        color: #fff;\n        -webkit-font-smoothing: antialiased;\n    }\n\n    body, input, button{\n        font-family: 'Roboto Slab', serif;\n        font-size: 16px;\n        \n    }\n\n    h1, h2, h3, h4, h5, h6, strong{\n        font-weight: 500;\n    }\n\n    button{\n        cursor: pointer;\n    }\n`;","import styled, {css, keyframes} from \"styled-components\";\n\nexport const backgrounds = {\n    steel: css`background: #f4f4f4;`,\n    fire: css`background: #FDDFDF;`,\n    grass: css`background: #DEFDE0;`,\n    electric: css`background: #FCF7DE;`,\n    water: css`background: #DEF3FD;`,\n    ice: css`background: #DEF3FD;`,\n    ground: css`background: #f4e7da;`,\n    rock: css`background: #d5d5d4;`,\n    fairy: css`background: #fceaff;`,\n    poison: css`background: #98d7a5;`,\n    bug: css`background: #f8d5a3;`,\n    dragon: css`background: #97b3e6;`,\n    psychic: css`background: #eaeda1;`,\n    flying: css`background: #F5F5F5;`,\n    fighting: css`background: #E6E0D4;`,\n    normal: css`background: #F5F5F5;`\n}\n\ninterface ItemProps {\n    bg: \"steel\" | \"fire\" | \"grass\" | \"electric\" | \"water\" | \"ice\" | \"ground\" | \"rock\" | \"fairy\" | \"poison\" | \"bug\" | \"dragon\" | \"psychic\" | \"flying\" | \"fighting\" | \"normal\";\n}\n\nconst myanimation = keyframes`\n    from {\n        opacity: 0;\n        transform: translateY(50px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0px);\n    }\n`;\n\nexport const Item = styled.li<ItemProps>`\n\n    box-shadow: 0px 2px 12px gray;\n\n    animation: ${myanimation} 1s;\n    ${(props) => backgrounds[props.bg!]};\n`;\n","import styled, {keyframes} from \"styled-components\";\nimport { backgrounds } from \"./Item/style\";\nimport { animated } from \"react-spring\";\n\n\nconst spinner = keyframes`\n\n    to{\n        transform: rotate(360deg) ;\n    }\n`;\n\nexport const Animation = styled.div`\n\n    svg {\n        animation: ${spinner} 2s linear infinite;\n    }\n\n`;\n\nexport const Container = styled.div`\n\n    margin-top: 70px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    \n    > p {\n        font-weight:bold;\n        font-size: 120px;\n        letter-spacing: 15px;\n        color: grey;\n    }\n\n    ul {\n        width: 100%;\n        padding: 40px;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    li {\n\n        &:hover {\n            transform: translateX(10px) translateY(-10px);\n            padding: 10px;\n            padding-top: 1px;\n\n           div {\n             background-color: transparent;\n           }\n        }\n\n        transition: transform 0.2s, padding 0.2s;\n        cursor: pointer;\n        margin: 10px;\n        list-style: none;\n        width: 260px;\n        height: 310px;\n        border-radius: 5%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 20px;\n        color: black;\n        //background: #DEF3FD;\n\n        h1 {\n            margin: 2px 0;\n            color: gray;\n        }\n\n        div {\n            transition: background-color 0.6s;\n            background: white;\n            border-radius: 50%;\n            \n            img {\n                width: 100%;\n            }\n        }\n\n        p {\n            font-size: 15px;\n            color: gray;\n        }\n\n        :last-child{\n\n            transform: none;\n            justify-content: center;\n            //padding: 0;\n\n            ${backgrounds[\"normal\"]};\n            color: gray;\n\n            :hover {\n                \n                //background: linear-gradient(to top left, rgb(197, 230, 236), rgb(239, 187, 230));\n\n\n                //svg {\n                //    transform: scale(1.3);\n                //}\n\n                padding: 20px;\n                cursor: pointer;\n            }\n\n        \n\n            svg {\n                transition: transform 0.2s;\n            }\n            \n        }\n\n    }\n\n`;","import axios from \"axios\";\n\n\nconst api = axios.create({\n    baseURL: \"https://pokeapi.co/api/v2\"\n});\n\nexport default api;","import React from \"react\";\nimport { PokemonDetail } from \"../main\";\nimport { Item as ItemList } from './style';\n\n\ninterface PokemonList {\n    pokemon: PokemonDetail\n}\n\nconst Item: React.FC<PokemonList> = ({pokemon}) => {\n\n    let types = \"\";\n    for (const type of pokemon.types) {\n        if(!types){\n            types = `${type.type.name} `;\n        }else{\n            types += `| ${type.type.name}`;\n        }\n    }\n\n    return (\n        <ItemList bg={pokemon.types[0].type.name || \"normal\"}>\n                <div>\n                    <img src={pokemon.sprites.other[\"official-artwork\"].front_default} alt={pokemon.name}/>\n                </div>\n\n                <h1>{pokemon.name}</h1>\n\n                <p>{types}</p>\n        </ItemList>\n    );\n}\n\n\nexport default Item;","import React, {useState, useCallback, useEffect} from \"react\";\nimport { Container, Animation } from \"./style\";\nimport api from '../services/api'\nimport Pokemon from \"../services/pokemon\";\nimport Item from './Item/item';\nimport { BsPlusCircle } from \"react-icons/bs\";\nimport { ImSpinner11 } from \"react-icons/im\";\n\ninterface PokemonsList {\n    next: string;\n    results: {\n        name: string;\n        url: string;\n    }[]\n}\n\nexport interface PokemonDetail {\n    abilities: {\n        ability: {\n            name: string;\n        }\n    }[],\n    name: string;\n    types: [{\n        type: {\n            slot: number;\n            name: string;\n        }\n    }],\n    sprites: {\n        other: {\n            \"official-artwork\": {\n                front_default: string;\n            }\n        }\n    }\n}\n\nconst Main: React.FC = () => {\n\n    const [pokemons, setPokemons] = useState<PokemonsList>({} as PokemonsList);\n    const [offset, setOffset] = useState(0);\n    const [limit, setLimit] = useState(23);\n    const [spin, setSpin] = useState(false);\n    const [load, setLoad] = useState(false);\n\n    const [pokemonsDetails, setPokemonsDetails] = useState<PokemonDetail[]>([]);\n\n    async function getPokemons(){\n\n        setSpin(true);\n\n        const response =  await api.get<PokemonsList>(`/pokemon/?offset=${offset}&limit=23`);\n        const pokemonsList = response.data;        \n\n        setPokemons(pokemonsList);\n        setOffset(offset + limit);\n\n        const arrayPokemons = [];\n        for (const poke of pokemonsList.results) {\n            const response =  await api.get<PokemonDetail>(poke.url, {baseURL:\"\"});\n            arrayPokemons.push(response.data);\n        }\n\n        setPokemonsDetails([...pokemonsDetails, ...arrayPokemons]);\n        setSpin(false);\n    }\n\n    useEffect(() => {\n        getPokemons();\n    }, []);\n\n    return(\n        <Container>\n            \n            <ul>\n                {pokemonsDetails.map((pokemon) => {\n                    \n                    return (\n                        <Item pokemon={pokemon}/>\n                    );\n                })}\n\n                <li onClick={getPokemons}>\n                \n                    {!spin ? <BsPlusCircle size={100} />: <Animation><ImSpinner11 className=\"spinner\" size={100} /></Animation> }\n                </li>\n            </ul>\n           \n        </Container>\n    );\n}\n\nexport default Main;","import styled from \"styled-components\";\n\n\nexport const Container = styled.header`\n    width: 100%;\n    height: 60px;\n    position: fixed;\n    top: 0;\n    box-shadow: 0px 2px 20px gray;\n    z-index: 999;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    background: linear-gradient(to right, red, purple);\n\n    div {\n\n        :first-child{\n            padding-left: 10px;\n        }\n        \n        position: relative;\n        display: flex;\n        align-items: center;\n\n        flex: 1;\n\n        img{\n            width: 120px;\n        }\n    }\n\n`;","import React from  \"react\"\nimport { Container } from \"./style\";\n\nconst Header: React.FC = () => {\n    return (\n    <Container>  \n        <div><img src=\"https://i2.wp.com/multarte.com.br/wp-content/uploads/2019/03/pokemon-png-logo.png?fit=2000%2C736&ssl=1\" alt=\"pokemon\"/></div>\n        <div></div>\n    </Container>        \n    );\n    \n};\n\nexport default Header;","import React from 'react';\n\nimport GlobalStyle from \"./styles/global\";\nimport Main from \"./pages/main\";\nimport Header from \"./components/Header\";\n\nconst App: React.FC = () => \n(\n    <>\n        <Header />\n        <Main />\n        <GlobalStyle />\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}